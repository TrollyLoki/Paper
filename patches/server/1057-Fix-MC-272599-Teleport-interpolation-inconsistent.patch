From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: TrollyLoki <trollyloki@gmail.com>
Date: Tue, 18 Jun 2024 16:55:52 -0400
Subject: [PATCH] Fix MC-272599 Teleport interpolation inconsistent

The bug is caused by the server sending out periodic redundant entity movement/teleport packets.

This patch fixes the bug by disabling the periodic unnecessary movement packets for display entities, and skipping sending teleportation packets to players who have already been sent packet(s) with identical information.

See https://bugs.mojang.com/browse/MC-157464

diff --git a/src/main/java/net/minecraft/server/level/ServerEntity.java b/src/main/java/net/minecraft/server/level/ServerEntity.java
index a6a59b8c3aefd05f37ec2060834f39ceb364fa99..b003ac816a536b8719fceb8ccb143a91db9fff84 100644
--- a/src/main/java/net/minecraft/server/level/ServerEntity.java
+++ b/src/main/java/net/minecraft/server/level/ServerEntity.java
@@ -176,11 +176,12 @@ public class ServerEntity {
                 double vec3d_dx = vec3d.x - base.x;
                 double vec3d_dy = vec3d.y - base.y;
                 double vec3d_dz = vec3d.z - base.z;
-                boolean flag1 = (vec3d_dx * vec3d_dx + vec3d_dy * vec3d_dy + vec3d_dz * vec3d_dz) >= 7.62939453125E-6D;
+                boolean flag1 = (vec3d_dx * vec3d_dx + vec3d_dy * vec3d_dy + vec3d_dz * vec3d_dz) >= 7.62939453125E-6D; final boolean positionChanged = flag1; // Paper - OBFHELPER
                 // Paper end - reduce allocation of Vec3D here
                 Packet<?> packet1 = null;
-                boolean flag2 = flag1 || this.tickCount % 60 == 0;
-                boolean flag3 = Math.abs(i - this.yRotp) >= 1 || Math.abs(j - this.xRotp) >= 1;
+                boolean packetRedundant = false; // Paper - fix MC-272599
+                boolean flag2 = flag1 || this.tickCount % 60 == 0 && !(this.entity instanceof net.minecraft.world.entity.Display); // Paper - fix MC-272599
+                boolean flag3 = Math.abs(i - this.yRotp) >= 1 || Math.abs(j - this.xRotp) >= 1; final boolean rotationChanged = flag3; // Paper - OBFHELPER
                 boolean flag4 = false;
                 boolean flag5 = false;
 
@@ -205,6 +206,7 @@ public class ServerEntity {
                             flag5 = true;
                         }
                     } else {
+                        packetRedundant = !positionChanged && !rotationChanged && this.wasOnGround == this.entity.onGround(); // Paper - fix MC-272599
                         this.wasOnGround = this.entity.onGround();
                         this.teleportDelay = 0;
                         packet1 = new ClientboundTeleportEntityPacket(this.entity);
@@ -224,7 +226,15 @@ public class ServerEntity {
                 }
 
                 if (packet1 != null) {
-                    this.broadcast.accept(packet1);
+                    // Paper start - fix MC-272599
+                    if (packetRedundant) {
+                        for (ServerPlayerConnection connection : forceStateResync) {
+                            connection.send(packet1);
+                        }
+                    } else {
+                        this.broadcast.accept(packet1);
+                    }
+                    // Paper end - fix MC-272599
                 }
 
                 this.sendDirtyEntityData();
